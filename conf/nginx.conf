
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    lua_package_path './lua/main.lua';

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #server {
    #    listen       80;
    #    server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    server{
         listen 9999;
         server_name localhost;

         #location / {
         #  proxy_pass http://localhost:8080;
           #root C:/Users/nuit_noir/Desktop/npx_2020/pyw_prs;
           #index index.html;

         location /hello {
           default_type 'text/plain';

           content_by_lua '
               ngx.say("Hello from lua!")
           ';
         }

         location /main {
           default_type 'text/plain';

           content_by_lua_block {
             local ii="innite99999"
             function ww()
               ngx.say(ii)
             end
             ww()
             --ngx.say("Hello from print fn lua block")
           }
         }
         location /file {
           default_type 'text/html';
           content_by_lua_file ./lua/main.lua;
           lua_code_cache off;
         }
         location /page1 {
           #root C:/Users/nuit_noir/Desktop/openresty-1.15.8.1-win64/lua/www;
           root lua/www;
           index  index.html index.htm;
         }

        location /css/ {
          root lua/www ;
        }
        location /img/ {
          root lua/www ;
        }
        location /js/ {
          root lua/www ;
        }

         location /page2 {
           root lua/www;
           #index  index.html index.htm;
         }
         location /php {
           proxy_pass http://localhost:9000;
         }
         location /ini {
           #proxy_pass http://localhost:3000/pre_iproj/;
           proxy_pass https://nuitmod.github.io/ini_pwa;
         }

         location /dat {
           default_type 'text/html';
           content_by_lua_block {
           local out_dat="<h5>lua dat block iiiii</h5>"
             ngx.say(out_dat)
           }
           #lua_code_cache off;
         }
       }



}
